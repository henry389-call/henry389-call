import pygame
import random

# Inicializa o Pygame
pygame.init()

# Configurações da tela
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption('Jogo de Ping Pong')

# Cores
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Configurações da bola e das raquetes
ball_speed_x = 7
ball_speed_y = 7
ball = pygame.Rect(WIDTH / 2 - 15, HEIGHT / 2 - 15, 30, 30)
ball_dx = ball_speed_x
ball_dy = ball_speed_y

paddle_width, paddle_height = 10, 100
left_paddle = pygame.Rect(30, HEIGHT / 2 - paddle_height / 2, paddle_width, paddle_height)
right_paddle = pygame.Rect(WIDTH - 30 - paddle_width, HEIGHT / 2 - paddle_height / 2, paddle_width, paddle_height)
paddle_speed = 10

# Função para desenhar a bola e as raquetes
def draw_objects():
    screen.fill(BLACK)
    pygame.draw.ellipse(screen, WHITE, ball)
    pygame.draw.rect(screen, WHITE, left_paddle)
    pygame.draw.rect(screen, WHITE, right_paddle)
    pygame.display.flip()

# Função principal do jogo
def game_loop():
    global ball_dx, ball_dy
    clock = pygame.time.Clock()

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                return
        
        keys = pygame.key.get_pressed()
        if keys[pygame.K_w] and left_paddle.top > 0:
            left_paddle.y -= paddle_speed
        if keys[pygame.K_s] and left_paddle.bottom < HEIGHT:
            left_paddle.y += paddle_speed
        if keys[pygame.K_UP] and right_paddle.top > 0:
            right_paddle.y -= paddle_speed
        if keys[pygame.K_DOWN] and right_paddle.bottom < HEIGHT:
            right_paddle.y += paddle_speed

        # Move a bola
        ball.x += ball_dx
        ball.y += ball_dy

        # Colisão com a parede superior e inferior
        if ball.top <= 0 or ball.bottom >= HEIGHT:
            ball_dy *= -1

        # Colisão com as raquetes
        if ball.colliderect(left_paddle) or ball.colliderect(right_paddle):
            ball_dx *= -1

        # Redefinir a bola se sair da tela
        if ball.left <= 0 or ball.right >= WIDTH:
            ball.x = WIDTH / 2 - 15
            ball.y = HEIGHT / 2 - 15
            ball_dx *= random.choice([-1, 1])
            ball_dy *= random.choice([-1, 1])

        draw_objects()
        clock.tick(60)

# Inicia o jogo
if __name__ == '__main__':
    game_loop()
